[project]
name = "clinvar_ingest"
authors = [
    {name = "Kyle Ferriter", email = "kferrite@broadinstitute.org"},
]
description = "Parsing and working with ClinVar Variation XML in relational form"
readme = "README.md"
requires-python = ">=3.11"
keywords = ["bioinformatics", "clinvar"]
license = {text = "Apache-2.0"}
classifiers = [
    "Programming Language :: Python :: 3",
]
dependencies = [
    "python-dotenv~=1.0.0",
    "xmltodict==0.13.0",
    "coloredlogs",
    "click~=8.1.7",
    "google-cloud-bigquery~=3.20.1",
    "google-cloud-storage~=2.13.0",
    "google-cloud-run~=0.10.13",
    "fastapi~=0.104.1",
    "uvicorn~=0.24.0",
    "requests~=2.31.0",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "ipykernel",
    # "black~=23.9.1",
    # "isort~=5.13.2",
    "ruff~=0.6.3",
    "pytest~=7.4.3",
    # "pylint~=3.2.6",
    "httpx~=0.25.2",
]

[project.scripts]
clinvar-ingest = "clinvar_ingest.main:main"

[tool.setuptools.packages.find]
include = ["clinvar_ingest*"]

[tool.setuptools.package-data]
"clinvar_ingest" = ["*.json", ".*.env"]
"clinvar_ingest.cloud.bigquery.bq_json_schemas" = ["*.json"]

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
pylint.max-args = 7
select = ["ALL"]
fixable = ["ALL"]
ignore = [
    ## ignores copied from seqr
    # Individual Rules
    "E501",  # Black is less aggressive here when touching comments and strings, we're going to let those through.
    "G004",  # logging-f-string, these are fine for now

    # Rule Groupings
    "D",     # pydocstyle is for docs... we have none
    "FBT",   # flake-boolean-trap... disallows boolean args to functions... fixing this code will require refactors.
    "ANN",   # flake8-annotations is for typed code
    "DJ",    # django specific
    "PYI",   # pyi is typing stub files
    "PT",    # pytest specific
    "PTH",   # pathlib is preferred, but we're not using it yet
    "PD",    # pandas specific
    "NPY",   # numpy specific
    "TD",    # todos
    "FIX",   # fixmes

    ## Added to clinvar-ingest
    "C901",
    "TRY",
    "COM812", # trailing comma missing
    "TCH002", # move third-party import into a type-checking block
    "EM101", # exception must not use a string literal, assign to variable first
    "EM102", # exception must not use an f-string literal, assign to variable first
    "ERA001", # commented-out code
    "PLR0915", # too many statements
    "N", # too opinionated about names
    "T201", # print statement
    "SIM108", # Use ternary operator instead of `if`-`else`-block
    "SLF001", # private member accessed
    "S314", # Using `xml` to parse untrusted data is known to be vulnerable to XML attacks; use `defusedxml` equivalents
]

[tool.ruff.lint.per-file-ignores]
"test/*" = [
    "S101",  # assert statements
    "N806",  # variable in function should be lowercase
    "PLR2004", # magic value used in comparison
    "INP001", # file is part of an implicit namespace package
    "ARG001", # Unused function argument
    "SIM113", # Use `enumerate()` for index variable in `for` loop
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
markers = [
    "integration: mark a test as an integration test."
]

[project]
name = "clinvar_ingest"
authors = [
    {name = "Kyle Ferriter", email = "kferrite@broadinstitute.org"},
]
description = "Parsing and working with ClinVar Variation XML in relational form"
readme = "README.md"
requires-python = ">=3.11"
keywords = ["bioinformatics", "clinvar"]
license = {text = "Apache-2.0"}
classifiers = [
    "Programming Language :: Python :: 3",
]
dependencies = [
    "python-dotenv~=1.0.0",
    "xmltodict==0.13.0",
    "coloredlogs",
    "click~=8.1.7",
    "google-cloud-bigquery~=3.20.1",
    "google-cloud-storage~=2.13.0",
    "fastapi~=0.104.1",
    "uvicorn~=0.24.0",
    "requests~=2.31.0",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "ipykernel",
    "black~=23.9.1",
    "isort~=5.12.0",
    "ruff~=0.1.5",
    "pytest~=7.4.3",
    "pylint~=3.0.2",
    "httpx~=0.25.2",
]

[project.scripts]
clinvar-ingest = "clinvar_ingest.main:main"

[tool.setuptools.packages.find]
include = ["clinvar_ingest*"]

[tool.setuptools.package-data]
"clinvar_ingest" = ["*.json", ".*.env"]
"clinvar_ingest.cloud.bigquery.bq_json_schemas" = ["*.json"]

[tool.isort]
profile = "black"

[tool.ruff]
src = ["clinvar_ingest", "test"]
line-length = 100

[tool.ruff.lint]
select = [
    "F",  # https://docs.astral.sh/ruff/rules/#pyflakes-f
    "E", "W",  # https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
    "I",  # https://docs.astral.sh/ruff/rules/#isort-i
    "N",  # https://docs.astral.sh/ruff/rules/#pep8-naming-n
    "UP",  # https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "YTT",  # https://docs.astral.sh/ruff/rules/#flake8-2020-ytt
    "S",  # https://docs.astral.sh/ruff/rules/#flake8-bandit-s
    "B",  # https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "A",  # https://docs.astral.sh/ruff/rules/#flake8-builtins-a
    "C4",  # https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "DTZ",  # https://docs.astral.sh/ruff/rules/#flake8-datetimez-dtz
    "EM",  # https://docs.astral.sh/ruff/rules/#flake8-errmsg-em
    "LOG",  # https://docs.astral.sh/ruff/rules/#flake8-logging-log
    "G",  # https://docs.astral.sh/ruff/rules/#flake8-logging-format-g
    "PIE",  # https://docs.astral.sh/ruff/rules/#flake8-pie-pie
    "PT",  # https://docs.astral.sh/ruff/rules/#flake8-pytest-style-pt
    "RSE",  # https://docs.astral.sh/ruff/rules/#flake8-raise-rse
    "RET",  # https://docs.astral.sh/ruff/rules/#flake8-return-ret
    "SIM",  # https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
    "ARG",  # https://docs.astral.sh/ruff/rules/#flake8-unused-arguments-arg
    "PTH",  # https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
    "PL",  # https://docs.astral.sh/ruff/rules/#pylint-pl
    "TRY",  # https://docs.astral.sh/ruff/rules/#tryceratops-try
    "PERF",  # https://docs.astral.sh/ruff/rules/#perflint-perf
    "RUF",  # https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
]
fixable = [
    "F401",
    "F541",
    "I",
    "D",
    "UP",
    "B",
    "C4",
    "EM",
    "PIE",
    "PT",
    "RSE",
    "RET",
    "SIM",
    "PERF",
    "RUF",
]
ignore = [
    # ignore for compatibility with formatter
    "W191", "E111", "E114", "E117", "S321",
    # other
    "PLR0913",
]

[tool.ruff.lint.per-file-ignores]
"test/*" = ["S101"]

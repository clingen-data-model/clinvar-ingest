main:
    params: [args]
    steps:
        - init:
            assign:
                - ingest_steps:
                    - copy
                    - parse
                    - create_external_tables
                    - create_internal_tables
                - base_url: '${sys.get_env("CLOUD_RUN_SERVICE_URL") + "/"}'
                - initialize_step_url: '${base_url + "initialize_step"}'
                - step_status_url: '${base_url + "step_status"}'
                - clinvar_file: '${args.Name}'
        - for_in_steps:
            for:
                value: step
                in: ${ingest_steps}
                steps:
                    - init_vars:
                        assign:
                            - step_name: '${text.to_upper(step)}'
                    - log_execute_args:
                        call: sys.log
                        args:
                            data: '${"executing: " + step_name + " " + base_url + step + " " + clinvar_file}'
                    - initialize_step:
                        call: http.post
                        args:
                            url: '${initialize_step_url}'
                            body:
                                step_name: '${step_name}'
                                workflow_execution_id: '${clinvar_file}'
                            auth:
                                type: OIDC
                        result: initialize_step_result
                    - log_initialize_step_result:
                        call: sys.log
                        args:
                            data: '${initialize_step_result}'
                    - call_step:
                        call: http.post
                        args:
                            url: '${base_url + step}'
                            body: '${args}'
                            auth:
                                type: OIDC
                        result: call_step_result
                    - log_call_step_result:
                        call: sys.log
                        args:
                            data: '${call_step_result}'
                    - status_check:
                        call: http.post
                        args:
                            url: '${step_status_url}'
                            body:
                                step_name: '${step_name}'
                                file: '${clinvar_file}'
                            auth:
                                type: OIDC
                        result: status_check_result
                    - log_status_check_result:
                        call: sys.log
                        args:
                            data: '${status_check_result}'
                    - check_if_complete:
                        switch:
                            - condition: ${"FAILED"== status_check_result}
                              next: step_failed
                            - condition: ${"SUCCEEDED" == status_check_result}
                              next: step_succeeded
                    - wait_for_result:
                        call: sys.sleep
                        args:
                            seconds: 300
                        next: status_check
                    - step_succeeded:
                        return: '${"Step " + step_name + " succeeded for " + clinvar_file + " " + status_check_result.complete}'
                    - step_failed:
                        raise: '${"Step " + step_name + " failed for " + clinvar_file + " " + status_check_result.failure}'

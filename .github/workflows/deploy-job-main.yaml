name: Deploy Job
run-name: Deploy ${{ github.ref_name }} by @${{ github.actor }}

on:
  release:
    types: [published]

permissions:
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}

      - name: authenticate to google cloud
        id: "auth"
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/522856288592/locations/global/workloadIdentityPools/clingen-actions-pool/providers/clingen-github-actions
          service_account: clinvar-ingest-deployment@clingen-dev.iam.gserviceaccount.com

      - name: setup gcloud sdk
        uses: google-github-actions/setup-gcloud@v2

      ## Deploy v2 pipeline (job clinvar-vcv-ingest, dataset clinvar_ingest)
      - name: set env vars for vcv v2 pipeline
        run: |
          export CLINVAR_INGEST_RELEASE_TAG=${{ github.ref_name }}
          export CLINVAR_INGEST_BQ_META_DATASET=clinvar_ingest
          export instance_name=clinvar-vcv-ingest
          export file_format=vcv
          # Persist in github environment so that deploy-job and execute-job see them
          echo "CLINVAR_INGEST_RELEASE_TAG=$CLINVAR_INGEST_RELEASE_TAG" >> $GITHUB_ENV
          echo "CLINVAR_INGEST_BQ_META_DATASET=$CLINVAR_INGEST_BQ_META_DATASET" >> $GITHUB_ENV
          echo "instance_name=$instance_name" >> $GITHUB_ENV
          echo "file_format=$file_format" >> $GITHUB_ENV

      - name: build and deploy vcv v2 pipeline
        run: |
          bash misc/bin/deploy-job.sh

      - name: run test vcv v2 pipeline (without issuing slack messages)
        run: |
          # Override variables for testing.
          # Send no slack message and write outputs to a directory including the github run number to avoid collisions.
          CLINVAR_INGEST_BQ_META_DATASET=clinvar_ingest_gh_action CLINVAR_INGEST_SLACK_CHANNEL='' CLINVAR_INGEST_RELEASE_TAG="${CLINVAR_INGEST_RELEASE_TAG}_gh_${{ github.run_number }}" JOB_WAIT=1 bash misc/bin/execute-job.sh vcv-small

      ## Deploy + test RCV pipeline (job clinvar-rcv-ingest, dataset clinvar_ingest)
      - name: set env vars for rcv pipeline
        run: |
          export CLINVAR_INGEST_RELEASE_TAG=${{ github.ref_name }}
          export CLINVAR_INGEST_BQ_META_DATASET=clinvar_ingest
          export instance_name=clinvar-rcv-ingest
          export file_format=rcv
          # Persist in github environment so that deploy-job and execute-job see them
          echo "CLINVAR_INGEST_RELEASE_TAG=$CLINVAR_INGEST_RELEASE_TAG" >> $GITHUB_ENV
          echo "CLINVAR_INGEST_BQ_META_DATASET=$CLINVAR_INGEST_BQ_META_DATASET" >> $GITHUB_ENV
          echo "instance_name=$instance_name" >> $GITHUB_ENV
          echo "file_format=$file_format" >> $GITHUB_ENV

      - name: build and deploy rcv pipeline
        run: |
          bash misc/bin/deploy-job.sh

      - name: run test rcv pipeline (without issuing slack messages)
        run: |
          # Override variables for testing.
          # Send no slack message and write outputs to a directory including the github run number to avoid collisions.
          CLINVAR_INGEST_BQ_META_DATASET=clinvar_ingest_gh_action CLINVAR_INGEST_SLACK_CHANNEL='' CLINVAR_INGEST_RELEASE_TAG="${CLINVAR_INGEST_RELEASE_TAG}_gh_${{ github.run_number }}" JOB_WAIT=1 bash misc/bin/execute-job.sh rcv-small

      # ## Deploy copy-only pipeline (dataset clinvar_ingest_v1)
      # copy-only pipeline is deployed manually by deploy-pipeline-v1.sh


      ## Deploy stored procedures pipeline
      ## gets deployed before the BQ Ingest pipeline as the latter currently
      ## refers to the stored_procedures_workflow_instance_name used here in
      ## determining the next pipeline to call in its env vars
      - name: set env vars
        run: |
          stored_procedures_workflow_instance_name=stored-procedures
          export CLINVAR_INGEST_RELEASE_TAG=${{ github.ref_name }}
          export instance_name=$stored_procedures_workflow_instance_name
          export clinvar_ingest_cmd=python,/app/stored_procedure_workflow.py
          echo "instance_name=$instance_name" >> $GITHUB_ENV
          echo "CLINVAR_INGEST_RELEASE_TAG=$CLINVAR_INGEST_RELEASE_TAG" >> $GITHUB_ENV
          echo "clinvar_ingest_cmd=$clinvar_ingest_cmd" >> $GITHUB_ENV

      - name: build and deploy
        run: |
          bash misc/bin/deploy-job.sh

      ## Deploy BQ Ingest pipeline (job clinvar-bq-ingest, dataset clinvar_ingest)
      - name: set env vars for bq-ingest pipeline (vcv v2 + rcv v2)
        run: |
          export CLINVAR_INGEST_RELEASE_TAG=${{ github.ref_name }}
          export CLINVAR_INGEST_BQ_META_DATASET=clinvar_ingest
          export instance_name=clinvar-bq-ingest
          export clinvar_ingest_cmd=python,/app/bq_ingester.py
          echo "instance_name=$instance_name" >> $GITHUB_ENV
          echo "CLINVAR_INGEST_RELEASE_TAG=$CLINVAR_INGEST_RELEASE_TAG" >> $GITHUB_ENV
          echo "CLINVAR_INGEST_BQ_META_DATASET=$CLINVAR_INGEST_BQ_META_DATASET" >> $GITHUB_ENV
          ## echo 
          ## 
          echo "clinvar_ingest_cmd=$clinvar_ingest_cmd" >> $GITHUB_ENV

      - name: build and deploy bq-ingest pipeline (vcv v2 + rcv v2)
        run: |
          bash misc/bin/deploy-job.sh

